// <auto-generated />
using System;
using Birdie.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Birdie.Data.Migrations
{
    [DbContext(typeof(BirdieDbContext))]
    [Migration("20211205160110_Start")]
    partial class Start
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Birdie.Data.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("current_timestamp");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("Birdie.Data.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValue(new Guid("312b865f-6af0-47c8-98a1-f4cf4952becb"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("current_timestamp");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Room");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Identifier = new Guid("dc1c93bf-d065-4c74-a3ec-133e13299edb"),
                            Name = "Waiting room",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 12, 5, 13, 1, 10, 243, DateTimeKind.Unspecified).AddTicks(921), new TimeSpan(0, -3, 0, 0, 0)),
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Identifier = new Guid("4805a600-84e8-4f1c-9175-b093e36e4f8e"),
                            Name = "Cool room",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 12, 5, 13, 1, 10, 243, DateTimeKind.Unspecified).AddTicks(1151), new TimeSpan(0, -3, 0, 0, 0)),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Identifier = new Guid("b5381a2f-ce40-4c0f-86de-983865b21ad6"),
                            Name = "Cactus room",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 12, 5, 13, 1, 10, 243, DateTimeKind.Unspecified).AddTicks(1157), new TimeSpan(0, -3, 0, 0, 0)),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Birdie.Data.Entities.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("Close")
                        .HasColumnType("numeric");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("High")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Low")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Open")
                        .HasColumnType("numeric");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("current_timestamp");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Symbol")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("Birdie.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("current_timestamp");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "JNGuicG0l9amrBO1wj1MuA==",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 12, 5, 13, 1, 10, 240, DateTimeKind.Unspecified).AddTicks(1609), new TimeSpan(0, -3, 0, 0, 0)),
                            UserName = "bot"
                        },
                        new
                        {
                            Id = 2,
                            Password = "JNGuicG0l9amrBO1wj1MuA==",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 12, 5, 13, 1, 10, 242, DateTimeKind.Unspecified).AddTicks(1046), new TimeSpan(0, -3, 0, 0, 0)),
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Birdie.Data.Entities.Message", b =>
                {
                    b.HasOne("Birdie.Data.Entities.Room", "Room")
                        .WithMany("Message")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Birdie.Data.Entities.User", "User")
                        .WithMany("Message")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Birdie.Data.Entities.Room", b =>
                {
                    b.HasOne("Birdie.Data.Entities.User", "User")
                        .WithMany("Room")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Birdie.Data.Entities.Stock", b =>
                {
                    b.HasOne("Birdie.Data.Entities.User", "User")
                        .WithMany("Stock")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Birdie.Data.Entities.Room", b =>
                {
                    b.Navigation("Message");
                });

            modelBuilder.Entity("Birdie.Data.Entities.User", b =>
                {
                    b.Navigation("Message");

                    b.Navigation("Room");

                    b.Navigation("Stock");
                });
#pragma warning restore 612, 618
        }
    }
}
